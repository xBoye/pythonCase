# sqlite数据存储

数据库：shi.db
数据表: shi
命令行创建数据库：sqlite3 shi.db
创建基本表：title(标题)、author(作者)、dynasty(朝代)、body(正文)、note(备注)。
create table shi(
   id integer primary key autoincrement,
   title varchar(60),
   author varchar(20),
   dynasty varchar(10),
   body text,
   note text
);
1、数据库命令行可以通过SQL进行增删改查操作。
2、程序访问数据库，使用Python编程。
Python连接sqlite3数据库
import sqlite3
.插入数据 
>>> import sqlite3
>>> con = sqlite3.connect('shi.db')
>>> cur = con.cursor()
>>> for t in[(0,10,'abc','Yu'),(1,20,'cba','Xu')]:
    cur.execute("insert into shi(title, author, dynasty, body) values (?,?,?,?)", t)
>>> cur.commit()

#Python连接sqlite3
游标对象有以下的操作：
1.execute()--执行sql语句   
2.executemany--执行多条sql语句   
3.close()--关闭游标   
4.fetchone()--从结果中取一条记录，并将游标指向下一条记录   
5.fetchmany()--从结果中取多条记录   
6.fetchall()--从结果中取出所有记录   
7.scroll()--游标滚动  

.插入数据 
>>> import sqlite3
>>> s = sqlite3.connect('shies.db')
>>> cur = s.cursor()
>>> for t in[(0,10,'abc','Yu'),(1,20,'cba','Xu')]:
    cx.execute("insert into shies(title, author, dynasty, body) values (?,?,?,?)", t)
>>> s.commit()


请注意避免以下写法：
# Never do this -- insecure 会导致注入攻击
pid=200
cx.execute("... where pid = '%s'" % pid)
正确的做法如下，如果t只是单个数值，也要采用t=(n,)的形式，因为元组是不可变的。 
for t in[(0,10,'abc','Yu'),(1,20,'cba','Xu')]:
    cx.execute("insert into catalog values (?,?,?,?)", t)
简单的插入两行数据,不过需要提醒的是,只有提交了之后,才能生效.我们使用数据库连接对象cx来进行提交commit和回滚rollback操作.
cx.commit()
